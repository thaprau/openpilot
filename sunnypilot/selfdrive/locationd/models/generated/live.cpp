#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with SymPy 1.14.0                      *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_2228758734077453113) {
   out_2228758734077453113[0] = 0;
   out_2228758734077453113[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_2228758734077453113[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_2228758734077453113[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_2228758734077453113[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_2228758734077453113[5] = -sin(in_vec[1]);
   out_2228758734077453113[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2228758734077453113[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2228758734077453113[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_2228758734077453113[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_2228758734077453113[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_2228758734077453113[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_2228758734077453113[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2228758734077453113[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2228758734077453113[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_2228758734077453113[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_2228758734077453113[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_2228758734077453113[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_6109722366019468224) {
   out_6109722366019468224[0] = delta_x[0] + nom_x[0];
   out_6109722366019468224[1] = delta_x[1] + nom_x[1];
   out_6109722366019468224[2] = delta_x[2] + nom_x[2];
   out_6109722366019468224[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_6109722366019468224[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_6109722366019468224[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_6109722366019468224[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_6109722366019468224[7] = delta_x[6] + nom_x[7];
   out_6109722366019468224[8] = delta_x[7] + nom_x[8];
   out_6109722366019468224[9] = delta_x[8] + nom_x[9];
   out_6109722366019468224[10] = delta_x[9] + nom_x[10];
   out_6109722366019468224[11] = delta_x[10] + nom_x[11];
   out_6109722366019468224[12] = delta_x[11] + nom_x[12];
   out_6109722366019468224[13] = delta_x[12] + nom_x[13];
   out_6109722366019468224[14] = delta_x[13] + nom_x[14];
   out_6109722366019468224[15] = delta_x[14] + nom_x[15];
   out_6109722366019468224[16] = delta_x[15] + nom_x[16];
   out_6109722366019468224[17] = delta_x[16] + nom_x[17];
   out_6109722366019468224[18] = delta_x[17] + nom_x[18];
   out_6109722366019468224[19] = delta_x[18] + nom_x[19];
   out_6109722366019468224[20] = delta_x[19] + nom_x[20];
   out_6109722366019468224[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_8198973285533712309) {
   out_8198973285533712309[0] = -nom_x[0] + true_x[0];
   out_8198973285533712309[1] = -nom_x[1] + true_x[1];
   out_8198973285533712309[2] = -nom_x[2] + true_x[2];
   out_8198973285533712309[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_8198973285533712309[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_8198973285533712309[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_8198973285533712309[6] = -nom_x[7] + true_x[7];
   out_8198973285533712309[7] = -nom_x[8] + true_x[8];
   out_8198973285533712309[8] = -nom_x[9] + true_x[9];
   out_8198973285533712309[9] = -nom_x[10] + true_x[10];
   out_8198973285533712309[10] = -nom_x[11] + true_x[11];
   out_8198973285533712309[11] = -nom_x[12] + true_x[12];
   out_8198973285533712309[12] = -nom_x[13] + true_x[13];
   out_8198973285533712309[13] = -nom_x[14] + true_x[14];
   out_8198973285533712309[14] = -nom_x[15] + true_x[15];
   out_8198973285533712309[15] = -nom_x[16] + true_x[16];
   out_8198973285533712309[16] = -nom_x[17] + true_x[17];
   out_8198973285533712309[17] = -nom_x[18] + true_x[18];
   out_8198973285533712309[18] = -nom_x[19] + true_x[19];
   out_8198973285533712309[19] = -nom_x[20] + true_x[20];
   out_8198973285533712309[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_7958592863135401902) {
   out_7958592863135401902[0] = 1.0;
   out_7958592863135401902[1] = 0;
   out_7958592863135401902[2] = 0;
   out_7958592863135401902[3] = 0.0;
   out_7958592863135401902[4] = 0.0;
   out_7958592863135401902[5] = 0.0;
   out_7958592863135401902[6] = 0.0;
   out_7958592863135401902[7] = 0.0;
   out_7958592863135401902[8] = 0.0;
   out_7958592863135401902[9] = 0.0;
   out_7958592863135401902[10] = 0.0;
   out_7958592863135401902[11] = 0.0;
   out_7958592863135401902[12] = 0.0;
   out_7958592863135401902[13] = 0.0;
   out_7958592863135401902[14] = 0.0;
   out_7958592863135401902[15] = 0.0;
   out_7958592863135401902[16] = 0.0;
   out_7958592863135401902[17] = 0.0;
   out_7958592863135401902[18] = 0.0;
   out_7958592863135401902[19] = 0.0;
   out_7958592863135401902[20] = 0.0;
   out_7958592863135401902[21] = 0;
   out_7958592863135401902[22] = 1.0;
   out_7958592863135401902[23] = 0;
   out_7958592863135401902[24] = 0.0;
   out_7958592863135401902[25] = 0.0;
   out_7958592863135401902[26] = 0.0;
   out_7958592863135401902[27] = 0.0;
   out_7958592863135401902[28] = 0.0;
   out_7958592863135401902[29] = 0.0;
   out_7958592863135401902[30] = 0.0;
   out_7958592863135401902[31] = 0.0;
   out_7958592863135401902[32] = 0.0;
   out_7958592863135401902[33] = 0.0;
   out_7958592863135401902[34] = 0.0;
   out_7958592863135401902[35] = 0.0;
   out_7958592863135401902[36] = 0.0;
   out_7958592863135401902[37] = 0.0;
   out_7958592863135401902[38] = 0.0;
   out_7958592863135401902[39] = 0.0;
   out_7958592863135401902[40] = 0.0;
   out_7958592863135401902[41] = 0.0;
   out_7958592863135401902[42] = 0;
   out_7958592863135401902[43] = 0;
   out_7958592863135401902[44] = 1.0;
   out_7958592863135401902[45] = 0.0;
   out_7958592863135401902[46] = 0.0;
   out_7958592863135401902[47] = 0.0;
   out_7958592863135401902[48] = 0.0;
   out_7958592863135401902[49] = 0.0;
   out_7958592863135401902[50] = 0.0;
   out_7958592863135401902[51] = 0.0;
   out_7958592863135401902[52] = 0.0;
   out_7958592863135401902[53] = 0.0;
   out_7958592863135401902[54] = 0.0;
   out_7958592863135401902[55] = 0.0;
   out_7958592863135401902[56] = 0.0;
   out_7958592863135401902[57] = 0.0;
   out_7958592863135401902[58] = 0.0;
   out_7958592863135401902[59] = 0.0;
   out_7958592863135401902[60] = 0.0;
   out_7958592863135401902[61] = 0.0;
   out_7958592863135401902[62] = 0.0;
   out_7958592863135401902[63] = 0.0;
   out_7958592863135401902[64] = 0.0;
   out_7958592863135401902[65] = 0.0;
   out_7958592863135401902[66] = -0.5*state[4];
   out_7958592863135401902[67] = -0.5*state[5];
   out_7958592863135401902[68] = -0.5*state[6];
   out_7958592863135401902[69] = 0.0;
   out_7958592863135401902[70] = 0.0;
   out_7958592863135401902[71] = 0.0;
   out_7958592863135401902[72] = 0.0;
   out_7958592863135401902[73] = 0.0;
   out_7958592863135401902[74] = 0.0;
   out_7958592863135401902[75] = 0.0;
   out_7958592863135401902[76] = 0.0;
   out_7958592863135401902[77] = 0.0;
   out_7958592863135401902[78] = 0.0;
   out_7958592863135401902[79] = 0.0;
   out_7958592863135401902[80] = 0.0;
   out_7958592863135401902[81] = 0.0;
   out_7958592863135401902[82] = 0.0;
   out_7958592863135401902[83] = 0.0;
   out_7958592863135401902[84] = 0.0;
   out_7958592863135401902[85] = 0.0;
   out_7958592863135401902[86] = 0.0;
   out_7958592863135401902[87] = 0.5*state[3];
   out_7958592863135401902[88] = 0.5*state[6];
   out_7958592863135401902[89] = -0.5*state[5];
   out_7958592863135401902[90] = 0.0;
   out_7958592863135401902[91] = 0.0;
   out_7958592863135401902[92] = 0.0;
   out_7958592863135401902[93] = 0.0;
   out_7958592863135401902[94] = 0.0;
   out_7958592863135401902[95] = 0.0;
   out_7958592863135401902[96] = 0.0;
   out_7958592863135401902[97] = 0.0;
   out_7958592863135401902[98] = 0.0;
   out_7958592863135401902[99] = 0.0;
   out_7958592863135401902[100] = 0.0;
   out_7958592863135401902[101] = 0.0;
   out_7958592863135401902[102] = 0.0;
   out_7958592863135401902[103] = 0.0;
   out_7958592863135401902[104] = 0.0;
   out_7958592863135401902[105] = 0.0;
   out_7958592863135401902[106] = 0.0;
   out_7958592863135401902[107] = 0.0;
   out_7958592863135401902[108] = -0.5*state[6];
   out_7958592863135401902[109] = 0.5*state[3];
   out_7958592863135401902[110] = 0.5*state[4];
   out_7958592863135401902[111] = 0.0;
   out_7958592863135401902[112] = 0.0;
   out_7958592863135401902[113] = 0.0;
   out_7958592863135401902[114] = 0.0;
   out_7958592863135401902[115] = 0.0;
   out_7958592863135401902[116] = 0.0;
   out_7958592863135401902[117] = 0.0;
   out_7958592863135401902[118] = 0.0;
   out_7958592863135401902[119] = 0.0;
   out_7958592863135401902[120] = 0.0;
   out_7958592863135401902[121] = 0.0;
   out_7958592863135401902[122] = 0.0;
   out_7958592863135401902[123] = 0.0;
   out_7958592863135401902[124] = 0.0;
   out_7958592863135401902[125] = 0.0;
   out_7958592863135401902[126] = 0.0;
   out_7958592863135401902[127] = 0.0;
   out_7958592863135401902[128] = 0.0;
   out_7958592863135401902[129] = 0.5*state[5];
   out_7958592863135401902[130] = -0.5*state[4];
   out_7958592863135401902[131] = 0.5*state[3];
   out_7958592863135401902[132] = 0.0;
   out_7958592863135401902[133] = 0.0;
   out_7958592863135401902[134] = 0.0;
   out_7958592863135401902[135] = 0.0;
   out_7958592863135401902[136] = 0.0;
   out_7958592863135401902[137] = 0.0;
   out_7958592863135401902[138] = 0.0;
   out_7958592863135401902[139] = 0.0;
   out_7958592863135401902[140] = 0.0;
   out_7958592863135401902[141] = 0.0;
   out_7958592863135401902[142] = 0.0;
   out_7958592863135401902[143] = 0.0;
   out_7958592863135401902[144] = 0.0;
   out_7958592863135401902[145] = 0.0;
   out_7958592863135401902[146] = 0.0;
   out_7958592863135401902[147] = 0.0;
   out_7958592863135401902[148] = 0.0;
   out_7958592863135401902[149] = 0.0;
   out_7958592863135401902[150] = 0.0;
   out_7958592863135401902[151] = 0.0;
   out_7958592863135401902[152] = 0.0;
   out_7958592863135401902[153] = 1.0;
   out_7958592863135401902[154] = 0;
   out_7958592863135401902[155] = 0;
   out_7958592863135401902[156] = 0;
   out_7958592863135401902[157] = 0;
   out_7958592863135401902[158] = 0;
   out_7958592863135401902[159] = 0;
   out_7958592863135401902[160] = 0;
   out_7958592863135401902[161] = 0;
   out_7958592863135401902[162] = 0;
   out_7958592863135401902[163] = 0;
   out_7958592863135401902[164] = 0;
   out_7958592863135401902[165] = 0;
   out_7958592863135401902[166] = 0;
   out_7958592863135401902[167] = 0;
   out_7958592863135401902[168] = 0.0;
   out_7958592863135401902[169] = 0.0;
   out_7958592863135401902[170] = 0.0;
   out_7958592863135401902[171] = 0.0;
   out_7958592863135401902[172] = 0.0;
   out_7958592863135401902[173] = 0.0;
   out_7958592863135401902[174] = 0;
   out_7958592863135401902[175] = 1.0;
   out_7958592863135401902[176] = 0;
   out_7958592863135401902[177] = 0;
   out_7958592863135401902[178] = 0;
   out_7958592863135401902[179] = 0;
   out_7958592863135401902[180] = 0;
   out_7958592863135401902[181] = 0;
   out_7958592863135401902[182] = 0;
   out_7958592863135401902[183] = 0;
   out_7958592863135401902[184] = 0;
   out_7958592863135401902[185] = 0;
   out_7958592863135401902[186] = 0;
   out_7958592863135401902[187] = 0;
   out_7958592863135401902[188] = 0;
   out_7958592863135401902[189] = 0.0;
   out_7958592863135401902[190] = 0.0;
   out_7958592863135401902[191] = 0.0;
   out_7958592863135401902[192] = 0.0;
   out_7958592863135401902[193] = 0.0;
   out_7958592863135401902[194] = 0.0;
   out_7958592863135401902[195] = 0;
   out_7958592863135401902[196] = 0;
   out_7958592863135401902[197] = 1.0;
   out_7958592863135401902[198] = 0;
   out_7958592863135401902[199] = 0;
   out_7958592863135401902[200] = 0;
   out_7958592863135401902[201] = 0;
   out_7958592863135401902[202] = 0;
   out_7958592863135401902[203] = 0;
   out_7958592863135401902[204] = 0;
   out_7958592863135401902[205] = 0;
   out_7958592863135401902[206] = 0;
   out_7958592863135401902[207] = 0;
   out_7958592863135401902[208] = 0;
   out_7958592863135401902[209] = 0;
   out_7958592863135401902[210] = 0.0;
   out_7958592863135401902[211] = 0.0;
   out_7958592863135401902[212] = 0.0;
   out_7958592863135401902[213] = 0.0;
   out_7958592863135401902[214] = 0.0;
   out_7958592863135401902[215] = 0.0;
   out_7958592863135401902[216] = 0;
   out_7958592863135401902[217] = 0;
   out_7958592863135401902[218] = 0;
   out_7958592863135401902[219] = 1.0;
   out_7958592863135401902[220] = 0;
   out_7958592863135401902[221] = 0;
   out_7958592863135401902[222] = 0;
   out_7958592863135401902[223] = 0;
   out_7958592863135401902[224] = 0;
   out_7958592863135401902[225] = 0;
   out_7958592863135401902[226] = 0;
   out_7958592863135401902[227] = 0;
   out_7958592863135401902[228] = 0;
   out_7958592863135401902[229] = 0;
   out_7958592863135401902[230] = 0;
   out_7958592863135401902[231] = 0.0;
   out_7958592863135401902[232] = 0.0;
   out_7958592863135401902[233] = 0.0;
   out_7958592863135401902[234] = 0.0;
   out_7958592863135401902[235] = 0.0;
   out_7958592863135401902[236] = 0.0;
   out_7958592863135401902[237] = 0;
   out_7958592863135401902[238] = 0;
   out_7958592863135401902[239] = 0;
   out_7958592863135401902[240] = 0;
   out_7958592863135401902[241] = 1.0;
   out_7958592863135401902[242] = 0;
   out_7958592863135401902[243] = 0;
   out_7958592863135401902[244] = 0;
   out_7958592863135401902[245] = 0;
   out_7958592863135401902[246] = 0;
   out_7958592863135401902[247] = 0;
   out_7958592863135401902[248] = 0;
   out_7958592863135401902[249] = 0;
   out_7958592863135401902[250] = 0;
   out_7958592863135401902[251] = 0;
   out_7958592863135401902[252] = 0.0;
   out_7958592863135401902[253] = 0.0;
   out_7958592863135401902[254] = 0.0;
   out_7958592863135401902[255] = 0.0;
   out_7958592863135401902[256] = 0.0;
   out_7958592863135401902[257] = 0.0;
   out_7958592863135401902[258] = 0;
   out_7958592863135401902[259] = 0;
   out_7958592863135401902[260] = 0;
   out_7958592863135401902[261] = 0;
   out_7958592863135401902[262] = 0;
   out_7958592863135401902[263] = 1.0;
   out_7958592863135401902[264] = 0;
   out_7958592863135401902[265] = 0;
   out_7958592863135401902[266] = 0;
   out_7958592863135401902[267] = 0;
   out_7958592863135401902[268] = 0;
   out_7958592863135401902[269] = 0;
   out_7958592863135401902[270] = 0;
   out_7958592863135401902[271] = 0;
   out_7958592863135401902[272] = 0;
   out_7958592863135401902[273] = 0.0;
   out_7958592863135401902[274] = 0.0;
   out_7958592863135401902[275] = 0.0;
   out_7958592863135401902[276] = 0.0;
   out_7958592863135401902[277] = 0.0;
   out_7958592863135401902[278] = 0.0;
   out_7958592863135401902[279] = 0;
   out_7958592863135401902[280] = 0;
   out_7958592863135401902[281] = 0;
   out_7958592863135401902[282] = 0;
   out_7958592863135401902[283] = 0;
   out_7958592863135401902[284] = 0;
   out_7958592863135401902[285] = 1.0;
   out_7958592863135401902[286] = 0;
   out_7958592863135401902[287] = 0;
   out_7958592863135401902[288] = 0;
   out_7958592863135401902[289] = 0;
   out_7958592863135401902[290] = 0;
   out_7958592863135401902[291] = 0;
   out_7958592863135401902[292] = 0;
   out_7958592863135401902[293] = 0;
   out_7958592863135401902[294] = 0.0;
   out_7958592863135401902[295] = 0.0;
   out_7958592863135401902[296] = 0.0;
   out_7958592863135401902[297] = 0.0;
   out_7958592863135401902[298] = 0.0;
   out_7958592863135401902[299] = 0.0;
   out_7958592863135401902[300] = 0;
   out_7958592863135401902[301] = 0;
   out_7958592863135401902[302] = 0;
   out_7958592863135401902[303] = 0;
   out_7958592863135401902[304] = 0;
   out_7958592863135401902[305] = 0;
   out_7958592863135401902[306] = 0;
   out_7958592863135401902[307] = 1.0;
   out_7958592863135401902[308] = 0;
   out_7958592863135401902[309] = 0;
   out_7958592863135401902[310] = 0;
   out_7958592863135401902[311] = 0;
   out_7958592863135401902[312] = 0;
   out_7958592863135401902[313] = 0;
   out_7958592863135401902[314] = 0;
   out_7958592863135401902[315] = 0.0;
   out_7958592863135401902[316] = 0.0;
   out_7958592863135401902[317] = 0.0;
   out_7958592863135401902[318] = 0.0;
   out_7958592863135401902[319] = 0.0;
   out_7958592863135401902[320] = 0.0;
   out_7958592863135401902[321] = 0;
   out_7958592863135401902[322] = 0;
   out_7958592863135401902[323] = 0;
   out_7958592863135401902[324] = 0;
   out_7958592863135401902[325] = 0;
   out_7958592863135401902[326] = 0;
   out_7958592863135401902[327] = 0;
   out_7958592863135401902[328] = 0;
   out_7958592863135401902[329] = 1.0;
   out_7958592863135401902[330] = 0;
   out_7958592863135401902[331] = 0;
   out_7958592863135401902[332] = 0;
   out_7958592863135401902[333] = 0;
   out_7958592863135401902[334] = 0;
   out_7958592863135401902[335] = 0;
   out_7958592863135401902[336] = 0.0;
   out_7958592863135401902[337] = 0.0;
   out_7958592863135401902[338] = 0.0;
   out_7958592863135401902[339] = 0.0;
   out_7958592863135401902[340] = 0.0;
   out_7958592863135401902[341] = 0.0;
   out_7958592863135401902[342] = 0;
   out_7958592863135401902[343] = 0;
   out_7958592863135401902[344] = 0;
   out_7958592863135401902[345] = 0;
   out_7958592863135401902[346] = 0;
   out_7958592863135401902[347] = 0;
   out_7958592863135401902[348] = 0;
   out_7958592863135401902[349] = 0;
   out_7958592863135401902[350] = 0;
   out_7958592863135401902[351] = 1.0;
   out_7958592863135401902[352] = 0;
   out_7958592863135401902[353] = 0;
   out_7958592863135401902[354] = 0;
   out_7958592863135401902[355] = 0;
   out_7958592863135401902[356] = 0;
   out_7958592863135401902[357] = 0.0;
   out_7958592863135401902[358] = 0.0;
   out_7958592863135401902[359] = 0.0;
   out_7958592863135401902[360] = 0.0;
   out_7958592863135401902[361] = 0.0;
   out_7958592863135401902[362] = 0.0;
   out_7958592863135401902[363] = 0;
   out_7958592863135401902[364] = 0;
   out_7958592863135401902[365] = 0;
   out_7958592863135401902[366] = 0;
   out_7958592863135401902[367] = 0;
   out_7958592863135401902[368] = 0;
   out_7958592863135401902[369] = 0;
   out_7958592863135401902[370] = 0;
   out_7958592863135401902[371] = 0;
   out_7958592863135401902[372] = 0;
   out_7958592863135401902[373] = 1.0;
   out_7958592863135401902[374] = 0;
   out_7958592863135401902[375] = 0;
   out_7958592863135401902[376] = 0;
   out_7958592863135401902[377] = 0;
   out_7958592863135401902[378] = 0.0;
   out_7958592863135401902[379] = 0.0;
   out_7958592863135401902[380] = 0.0;
   out_7958592863135401902[381] = 0.0;
   out_7958592863135401902[382] = 0.0;
   out_7958592863135401902[383] = 0.0;
   out_7958592863135401902[384] = 0;
   out_7958592863135401902[385] = 0;
   out_7958592863135401902[386] = 0;
   out_7958592863135401902[387] = 0;
   out_7958592863135401902[388] = 0;
   out_7958592863135401902[389] = 0;
   out_7958592863135401902[390] = 0;
   out_7958592863135401902[391] = 0;
   out_7958592863135401902[392] = 0;
   out_7958592863135401902[393] = 0;
   out_7958592863135401902[394] = 0;
   out_7958592863135401902[395] = 1.0;
   out_7958592863135401902[396] = 0;
   out_7958592863135401902[397] = 0;
   out_7958592863135401902[398] = 0;
   out_7958592863135401902[399] = 0.0;
   out_7958592863135401902[400] = 0.0;
   out_7958592863135401902[401] = 0.0;
   out_7958592863135401902[402] = 0.0;
   out_7958592863135401902[403] = 0.0;
   out_7958592863135401902[404] = 0.0;
   out_7958592863135401902[405] = 0;
   out_7958592863135401902[406] = 0;
   out_7958592863135401902[407] = 0;
   out_7958592863135401902[408] = 0;
   out_7958592863135401902[409] = 0;
   out_7958592863135401902[410] = 0;
   out_7958592863135401902[411] = 0;
   out_7958592863135401902[412] = 0;
   out_7958592863135401902[413] = 0;
   out_7958592863135401902[414] = 0;
   out_7958592863135401902[415] = 0;
   out_7958592863135401902[416] = 0;
   out_7958592863135401902[417] = 1.0;
   out_7958592863135401902[418] = 0;
   out_7958592863135401902[419] = 0;
   out_7958592863135401902[420] = 0.0;
   out_7958592863135401902[421] = 0.0;
   out_7958592863135401902[422] = 0.0;
   out_7958592863135401902[423] = 0.0;
   out_7958592863135401902[424] = 0.0;
   out_7958592863135401902[425] = 0.0;
   out_7958592863135401902[426] = 0;
   out_7958592863135401902[427] = 0;
   out_7958592863135401902[428] = 0;
   out_7958592863135401902[429] = 0;
   out_7958592863135401902[430] = 0;
   out_7958592863135401902[431] = 0;
   out_7958592863135401902[432] = 0;
   out_7958592863135401902[433] = 0;
   out_7958592863135401902[434] = 0;
   out_7958592863135401902[435] = 0;
   out_7958592863135401902[436] = 0;
   out_7958592863135401902[437] = 0;
   out_7958592863135401902[438] = 0;
   out_7958592863135401902[439] = 1.0;
   out_7958592863135401902[440] = 0;
   out_7958592863135401902[441] = 0.0;
   out_7958592863135401902[442] = 0.0;
   out_7958592863135401902[443] = 0.0;
   out_7958592863135401902[444] = 0.0;
   out_7958592863135401902[445] = 0.0;
   out_7958592863135401902[446] = 0.0;
   out_7958592863135401902[447] = 0;
   out_7958592863135401902[448] = 0;
   out_7958592863135401902[449] = 0;
   out_7958592863135401902[450] = 0;
   out_7958592863135401902[451] = 0;
   out_7958592863135401902[452] = 0;
   out_7958592863135401902[453] = 0;
   out_7958592863135401902[454] = 0;
   out_7958592863135401902[455] = 0;
   out_7958592863135401902[456] = 0;
   out_7958592863135401902[457] = 0;
   out_7958592863135401902[458] = 0;
   out_7958592863135401902[459] = 0;
   out_7958592863135401902[460] = 0;
   out_7958592863135401902[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_1637479678516278702) {
   out_1637479678516278702[0] = dt*state[7] + state[0];
   out_1637479678516278702[1] = dt*state[8] + state[1];
   out_1637479678516278702[2] = dt*state[9] + state[2];
   out_1637479678516278702[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_1637479678516278702[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_1637479678516278702[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_1637479678516278702[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_1637479678516278702[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_1637479678516278702[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_1637479678516278702[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_1637479678516278702[10] = state[10];
   out_1637479678516278702[11] = state[11];
   out_1637479678516278702[12] = state[12];
   out_1637479678516278702[13] = state[13];
   out_1637479678516278702[14] = state[14];
   out_1637479678516278702[15] = state[15];
   out_1637479678516278702[16] = state[16];
   out_1637479678516278702[17] = state[17];
   out_1637479678516278702[18] = state[18];
   out_1637479678516278702[19] = state[19];
   out_1637479678516278702[20] = state[20];
   out_1637479678516278702[21] = state[21];
}
void F_fun(double *state, double dt, double *out_2036482552630167662) {
   out_2036482552630167662[0] = 1;
   out_2036482552630167662[1] = 0;
   out_2036482552630167662[2] = 0;
   out_2036482552630167662[3] = 0;
   out_2036482552630167662[4] = 0;
   out_2036482552630167662[5] = 0;
   out_2036482552630167662[6] = dt;
   out_2036482552630167662[7] = 0;
   out_2036482552630167662[8] = 0;
   out_2036482552630167662[9] = 0;
   out_2036482552630167662[10] = 0;
   out_2036482552630167662[11] = 0;
   out_2036482552630167662[12] = 0;
   out_2036482552630167662[13] = 0;
   out_2036482552630167662[14] = 0;
   out_2036482552630167662[15] = 0;
   out_2036482552630167662[16] = 0;
   out_2036482552630167662[17] = 0;
   out_2036482552630167662[18] = 0;
   out_2036482552630167662[19] = 0;
   out_2036482552630167662[20] = 0;
   out_2036482552630167662[21] = 0;
   out_2036482552630167662[22] = 1;
   out_2036482552630167662[23] = 0;
   out_2036482552630167662[24] = 0;
   out_2036482552630167662[25] = 0;
   out_2036482552630167662[26] = 0;
   out_2036482552630167662[27] = 0;
   out_2036482552630167662[28] = dt;
   out_2036482552630167662[29] = 0;
   out_2036482552630167662[30] = 0;
   out_2036482552630167662[31] = 0;
   out_2036482552630167662[32] = 0;
   out_2036482552630167662[33] = 0;
   out_2036482552630167662[34] = 0;
   out_2036482552630167662[35] = 0;
   out_2036482552630167662[36] = 0;
   out_2036482552630167662[37] = 0;
   out_2036482552630167662[38] = 0;
   out_2036482552630167662[39] = 0;
   out_2036482552630167662[40] = 0;
   out_2036482552630167662[41] = 0;
   out_2036482552630167662[42] = 0;
   out_2036482552630167662[43] = 0;
   out_2036482552630167662[44] = 1;
   out_2036482552630167662[45] = 0;
   out_2036482552630167662[46] = 0;
   out_2036482552630167662[47] = 0;
   out_2036482552630167662[48] = 0;
   out_2036482552630167662[49] = 0;
   out_2036482552630167662[50] = dt;
   out_2036482552630167662[51] = 0;
   out_2036482552630167662[52] = 0;
   out_2036482552630167662[53] = 0;
   out_2036482552630167662[54] = 0;
   out_2036482552630167662[55] = 0;
   out_2036482552630167662[56] = 0;
   out_2036482552630167662[57] = 0;
   out_2036482552630167662[58] = 0;
   out_2036482552630167662[59] = 0;
   out_2036482552630167662[60] = 0;
   out_2036482552630167662[61] = 0;
   out_2036482552630167662[62] = 0;
   out_2036482552630167662[63] = 0;
   out_2036482552630167662[64] = 0;
   out_2036482552630167662[65] = 0;
   out_2036482552630167662[66] = 1;
   out_2036482552630167662[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2036482552630167662[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_2036482552630167662[69] = 0;
   out_2036482552630167662[70] = 0;
   out_2036482552630167662[71] = 0;
   out_2036482552630167662[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2036482552630167662[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2036482552630167662[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2036482552630167662[75] = 0;
   out_2036482552630167662[76] = 0;
   out_2036482552630167662[77] = 0;
   out_2036482552630167662[78] = 0;
   out_2036482552630167662[79] = 0;
   out_2036482552630167662[80] = 0;
   out_2036482552630167662[81] = 0;
   out_2036482552630167662[82] = 0;
   out_2036482552630167662[83] = 0;
   out_2036482552630167662[84] = 0;
   out_2036482552630167662[85] = 0;
   out_2036482552630167662[86] = 0;
   out_2036482552630167662[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2036482552630167662[88] = 1;
   out_2036482552630167662[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_2036482552630167662[90] = 0;
   out_2036482552630167662[91] = 0;
   out_2036482552630167662[92] = 0;
   out_2036482552630167662[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2036482552630167662[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2036482552630167662[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2036482552630167662[96] = 0;
   out_2036482552630167662[97] = 0;
   out_2036482552630167662[98] = 0;
   out_2036482552630167662[99] = 0;
   out_2036482552630167662[100] = 0;
   out_2036482552630167662[101] = 0;
   out_2036482552630167662[102] = 0;
   out_2036482552630167662[103] = 0;
   out_2036482552630167662[104] = 0;
   out_2036482552630167662[105] = 0;
   out_2036482552630167662[106] = 0;
   out_2036482552630167662[107] = 0;
   out_2036482552630167662[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_2036482552630167662[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_2036482552630167662[110] = 1;
   out_2036482552630167662[111] = 0;
   out_2036482552630167662[112] = 0;
   out_2036482552630167662[113] = 0;
   out_2036482552630167662[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2036482552630167662[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2036482552630167662[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2036482552630167662[117] = 0;
   out_2036482552630167662[118] = 0;
   out_2036482552630167662[119] = 0;
   out_2036482552630167662[120] = 0;
   out_2036482552630167662[121] = 0;
   out_2036482552630167662[122] = 0;
   out_2036482552630167662[123] = 0;
   out_2036482552630167662[124] = 0;
   out_2036482552630167662[125] = 0;
   out_2036482552630167662[126] = 0;
   out_2036482552630167662[127] = 0;
   out_2036482552630167662[128] = 0;
   out_2036482552630167662[129] = 0;
   out_2036482552630167662[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2036482552630167662[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_2036482552630167662[132] = 1;
   out_2036482552630167662[133] = 0;
   out_2036482552630167662[134] = 0;
   out_2036482552630167662[135] = 0;
   out_2036482552630167662[136] = 0;
   out_2036482552630167662[137] = 0;
   out_2036482552630167662[138] = 0;
   out_2036482552630167662[139] = 0;
   out_2036482552630167662[140] = 0;
   out_2036482552630167662[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2036482552630167662[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2036482552630167662[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2036482552630167662[144] = 0;
   out_2036482552630167662[145] = 0;
   out_2036482552630167662[146] = 0;
   out_2036482552630167662[147] = 0;
   out_2036482552630167662[148] = 0;
   out_2036482552630167662[149] = 0;
   out_2036482552630167662[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2036482552630167662[151] = 0;
   out_2036482552630167662[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_2036482552630167662[153] = 0;
   out_2036482552630167662[154] = 1;
   out_2036482552630167662[155] = 0;
   out_2036482552630167662[156] = 0;
   out_2036482552630167662[157] = 0;
   out_2036482552630167662[158] = 0;
   out_2036482552630167662[159] = 0;
   out_2036482552630167662[160] = 0;
   out_2036482552630167662[161] = 0;
   out_2036482552630167662[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2036482552630167662[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2036482552630167662[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2036482552630167662[165] = 0;
   out_2036482552630167662[166] = 0;
   out_2036482552630167662[167] = 0;
   out_2036482552630167662[168] = 0;
   out_2036482552630167662[169] = 0;
   out_2036482552630167662[170] = 0;
   out_2036482552630167662[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_2036482552630167662[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_2036482552630167662[173] = 0;
   out_2036482552630167662[174] = 0;
   out_2036482552630167662[175] = 0;
   out_2036482552630167662[176] = 1;
   out_2036482552630167662[177] = 0;
   out_2036482552630167662[178] = 0;
   out_2036482552630167662[179] = 0;
   out_2036482552630167662[180] = 0;
   out_2036482552630167662[181] = 0;
   out_2036482552630167662[182] = 0;
   out_2036482552630167662[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2036482552630167662[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2036482552630167662[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2036482552630167662[186] = 0;
   out_2036482552630167662[187] = 0;
   out_2036482552630167662[188] = 0;
   out_2036482552630167662[189] = 0;
   out_2036482552630167662[190] = 0;
   out_2036482552630167662[191] = 0;
   out_2036482552630167662[192] = 0;
   out_2036482552630167662[193] = 0;
   out_2036482552630167662[194] = 0;
   out_2036482552630167662[195] = 0;
   out_2036482552630167662[196] = 0;
   out_2036482552630167662[197] = 0;
   out_2036482552630167662[198] = 1;
   out_2036482552630167662[199] = 0;
   out_2036482552630167662[200] = 0;
   out_2036482552630167662[201] = 0;
   out_2036482552630167662[202] = 0;
   out_2036482552630167662[203] = 0;
   out_2036482552630167662[204] = 0;
   out_2036482552630167662[205] = 0;
   out_2036482552630167662[206] = 0;
   out_2036482552630167662[207] = 0;
   out_2036482552630167662[208] = 0;
   out_2036482552630167662[209] = 0;
   out_2036482552630167662[210] = 0;
   out_2036482552630167662[211] = 0;
   out_2036482552630167662[212] = 0;
   out_2036482552630167662[213] = 0;
   out_2036482552630167662[214] = 0;
   out_2036482552630167662[215] = 0;
   out_2036482552630167662[216] = 0;
   out_2036482552630167662[217] = 0;
   out_2036482552630167662[218] = 0;
   out_2036482552630167662[219] = 0;
   out_2036482552630167662[220] = 1;
   out_2036482552630167662[221] = 0;
   out_2036482552630167662[222] = 0;
   out_2036482552630167662[223] = 0;
   out_2036482552630167662[224] = 0;
   out_2036482552630167662[225] = 0;
   out_2036482552630167662[226] = 0;
   out_2036482552630167662[227] = 0;
   out_2036482552630167662[228] = 0;
   out_2036482552630167662[229] = 0;
   out_2036482552630167662[230] = 0;
   out_2036482552630167662[231] = 0;
   out_2036482552630167662[232] = 0;
   out_2036482552630167662[233] = 0;
   out_2036482552630167662[234] = 0;
   out_2036482552630167662[235] = 0;
   out_2036482552630167662[236] = 0;
   out_2036482552630167662[237] = 0;
   out_2036482552630167662[238] = 0;
   out_2036482552630167662[239] = 0;
   out_2036482552630167662[240] = 0;
   out_2036482552630167662[241] = 0;
   out_2036482552630167662[242] = 1;
   out_2036482552630167662[243] = 0;
   out_2036482552630167662[244] = 0;
   out_2036482552630167662[245] = 0;
   out_2036482552630167662[246] = 0;
   out_2036482552630167662[247] = 0;
   out_2036482552630167662[248] = 0;
   out_2036482552630167662[249] = 0;
   out_2036482552630167662[250] = 0;
   out_2036482552630167662[251] = 0;
   out_2036482552630167662[252] = 0;
   out_2036482552630167662[253] = 0;
   out_2036482552630167662[254] = 0;
   out_2036482552630167662[255] = 0;
   out_2036482552630167662[256] = 0;
   out_2036482552630167662[257] = 0;
   out_2036482552630167662[258] = 0;
   out_2036482552630167662[259] = 0;
   out_2036482552630167662[260] = 0;
   out_2036482552630167662[261] = 0;
   out_2036482552630167662[262] = 0;
   out_2036482552630167662[263] = 0;
   out_2036482552630167662[264] = 1;
   out_2036482552630167662[265] = 0;
   out_2036482552630167662[266] = 0;
   out_2036482552630167662[267] = 0;
   out_2036482552630167662[268] = 0;
   out_2036482552630167662[269] = 0;
   out_2036482552630167662[270] = 0;
   out_2036482552630167662[271] = 0;
   out_2036482552630167662[272] = 0;
   out_2036482552630167662[273] = 0;
   out_2036482552630167662[274] = 0;
   out_2036482552630167662[275] = 0;
   out_2036482552630167662[276] = 0;
   out_2036482552630167662[277] = 0;
   out_2036482552630167662[278] = 0;
   out_2036482552630167662[279] = 0;
   out_2036482552630167662[280] = 0;
   out_2036482552630167662[281] = 0;
   out_2036482552630167662[282] = 0;
   out_2036482552630167662[283] = 0;
   out_2036482552630167662[284] = 0;
   out_2036482552630167662[285] = 0;
   out_2036482552630167662[286] = 1;
   out_2036482552630167662[287] = 0;
   out_2036482552630167662[288] = 0;
   out_2036482552630167662[289] = 0;
   out_2036482552630167662[290] = 0;
   out_2036482552630167662[291] = 0;
   out_2036482552630167662[292] = 0;
   out_2036482552630167662[293] = 0;
   out_2036482552630167662[294] = 0;
   out_2036482552630167662[295] = 0;
   out_2036482552630167662[296] = 0;
   out_2036482552630167662[297] = 0;
   out_2036482552630167662[298] = 0;
   out_2036482552630167662[299] = 0;
   out_2036482552630167662[300] = 0;
   out_2036482552630167662[301] = 0;
   out_2036482552630167662[302] = 0;
   out_2036482552630167662[303] = 0;
   out_2036482552630167662[304] = 0;
   out_2036482552630167662[305] = 0;
   out_2036482552630167662[306] = 0;
   out_2036482552630167662[307] = 0;
   out_2036482552630167662[308] = 1;
   out_2036482552630167662[309] = 0;
   out_2036482552630167662[310] = 0;
   out_2036482552630167662[311] = 0;
   out_2036482552630167662[312] = 0;
   out_2036482552630167662[313] = 0;
   out_2036482552630167662[314] = 0;
   out_2036482552630167662[315] = 0;
   out_2036482552630167662[316] = 0;
   out_2036482552630167662[317] = 0;
   out_2036482552630167662[318] = 0;
   out_2036482552630167662[319] = 0;
   out_2036482552630167662[320] = 0;
   out_2036482552630167662[321] = 0;
   out_2036482552630167662[322] = 0;
   out_2036482552630167662[323] = 0;
   out_2036482552630167662[324] = 0;
   out_2036482552630167662[325] = 0;
   out_2036482552630167662[326] = 0;
   out_2036482552630167662[327] = 0;
   out_2036482552630167662[328] = 0;
   out_2036482552630167662[329] = 0;
   out_2036482552630167662[330] = 1;
   out_2036482552630167662[331] = 0;
   out_2036482552630167662[332] = 0;
   out_2036482552630167662[333] = 0;
   out_2036482552630167662[334] = 0;
   out_2036482552630167662[335] = 0;
   out_2036482552630167662[336] = 0;
   out_2036482552630167662[337] = 0;
   out_2036482552630167662[338] = 0;
   out_2036482552630167662[339] = 0;
   out_2036482552630167662[340] = 0;
   out_2036482552630167662[341] = 0;
   out_2036482552630167662[342] = 0;
   out_2036482552630167662[343] = 0;
   out_2036482552630167662[344] = 0;
   out_2036482552630167662[345] = 0;
   out_2036482552630167662[346] = 0;
   out_2036482552630167662[347] = 0;
   out_2036482552630167662[348] = 0;
   out_2036482552630167662[349] = 0;
   out_2036482552630167662[350] = 0;
   out_2036482552630167662[351] = 0;
   out_2036482552630167662[352] = 1;
   out_2036482552630167662[353] = 0;
   out_2036482552630167662[354] = 0;
   out_2036482552630167662[355] = 0;
   out_2036482552630167662[356] = 0;
   out_2036482552630167662[357] = 0;
   out_2036482552630167662[358] = 0;
   out_2036482552630167662[359] = 0;
   out_2036482552630167662[360] = 0;
   out_2036482552630167662[361] = 0;
   out_2036482552630167662[362] = 0;
   out_2036482552630167662[363] = 0;
   out_2036482552630167662[364] = 0;
   out_2036482552630167662[365] = 0;
   out_2036482552630167662[366] = 0;
   out_2036482552630167662[367] = 0;
   out_2036482552630167662[368] = 0;
   out_2036482552630167662[369] = 0;
   out_2036482552630167662[370] = 0;
   out_2036482552630167662[371] = 0;
   out_2036482552630167662[372] = 0;
   out_2036482552630167662[373] = 0;
   out_2036482552630167662[374] = 1;
   out_2036482552630167662[375] = 0;
   out_2036482552630167662[376] = 0;
   out_2036482552630167662[377] = 0;
   out_2036482552630167662[378] = 0;
   out_2036482552630167662[379] = 0;
   out_2036482552630167662[380] = 0;
   out_2036482552630167662[381] = 0;
   out_2036482552630167662[382] = 0;
   out_2036482552630167662[383] = 0;
   out_2036482552630167662[384] = 0;
   out_2036482552630167662[385] = 0;
   out_2036482552630167662[386] = 0;
   out_2036482552630167662[387] = 0;
   out_2036482552630167662[388] = 0;
   out_2036482552630167662[389] = 0;
   out_2036482552630167662[390] = 0;
   out_2036482552630167662[391] = 0;
   out_2036482552630167662[392] = 0;
   out_2036482552630167662[393] = 0;
   out_2036482552630167662[394] = 0;
   out_2036482552630167662[395] = 0;
   out_2036482552630167662[396] = 1;
   out_2036482552630167662[397] = 0;
   out_2036482552630167662[398] = 0;
   out_2036482552630167662[399] = 0;
   out_2036482552630167662[400] = 0;
   out_2036482552630167662[401] = 0;
   out_2036482552630167662[402] = 0;
   out_2036482552630167662[403] = 0;
   out_2036482552630167662[404] = 0;
   out_2036482552630167662[405] = 0;
   out_2036482552630167662[406] = 0;
   out_2036482552630167662[407] = 0;
   out_2036482552630167662[408] = 0;
   out_2036482552630167662[409] = 0;
   out_2036482552630167662[410] = 0;
   out_2036482552630167662[411] = 0;
   out_2036482552630167662[412] = 0;
   out_2036482552630167662[413] = 0;
   out_2036482552630167662[414] = 0;
   out_2036482552630167662[415] = 0;
   out_2036482552630167662[416] = 0;
   out_2036482552630167662[417] = 0;
   out_2036482552630167662[418] = 1;
   out_2036482552630167662[419] = 0;
   out_2036482552630167662[420] = 0;
   out_2036482552630167662[421] = 0;
   out_2036482552630167662[422] = 0;
   out_2036482552630167662[423] = 0;
   out_2036482552630167662[424] = 0;
   out_2036482552630167662[425] = 0;
   out_2036482552630167662[426] = 0;
   out_2036482552630167662[427] = 0;
   out_2036482552630167662[428] = 0;
   out_2036482552630167662[429] = 0;
   out_2036482552630167662[430] = 0;
   out_2036482552630167662[431] = 0;
   out_2036482552630167662[432] = 0;
   out_2036482552630167662[433] = 0;
   out_2036482552630167662[434] = 0;
   out_2036482552630167662[435] = 0;
   out_2036482552630167662[436] = 0;
   out_2036482552630167662[437] = 0;
   out_2036482552630167662[438] = 0;
   out_2036482552630167662[439] = 0;
   out_2036482552630167662[440] = 1;
}
void h_4(double *state, double *unused, double *out_210442290815034510) {
   out_210442290815034510[0] = state[10] + state[13];
   out_210442290815034510[1] = state[11] + state[14];
   out_210442290815034510[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_5089203552383187410) {
   out_5089203552383187410[0] = 0;
   out_5089203552383187410[1] = 0;
   out_5089203552383187410[2] = 0;
   out_5089203552383187410[3] = 0;
   out_5089203552383187410[4] = 0;
   out_5089203552383187410[5] = 0;
   out_5089203552383187410[6] = 0;
   out_5089203552383187410[7] = 0;
   out_5089203552383187410[8] = 0;
   out_5089203552383187410[9] = 0;
   out_5089203552383187410[10] = 1;
   out_5089203552383187410[11] = 0;
   out_5089203552383187410[12] = 0;
   out_5089203552383187410[13] = 1;
   out_5089203552383187410[14] = 0;
   out_5089203552383187410[15] = 0;
   out_5089203552383187410[16] = 0;
   out_5089203552383187410[17] = 0;
   out_5089203552383187410[18] = 0;
   out_5089203552383187410[19] = 0;
   out_5089203552383187410[20] = 0;
   out_5089203552383187410[21] = 0;
   out_5089203552383187410[22] = 0;
   out_5089203552383187410[23] = 0;
   out_5089203552383187410[24] = 0;
   out_5089203552383187410[25] = 0;
   out_5089203552383187410[26] = 0;
   out_5089203552383187410[27] = 0;
   out_5089203552383187410[28] = 0;
   out_5089203552383187410[29] = 0;
   out_5089203552383187410[30] = 0;
   out_5089203552383187410[31] = 0;
   out_5089203552383187410[32] = 0;
   out_5089203552383187410[33] = 1;
   out_5089203552383187410[34] = 0;
   out_5089203552383187410[35] = 0;
   out_5089203552383187410[36] = 1;
   out_5089203552383187410[37] = 0;
   out_5089203552383187410[38] = 0;
   out_5089203552383187410[39] = 0;
   out_5089203552383187410[40] = 0;
   out_5089203552383187410[41] = 0;
   out_5089203552383187410[42] = 0;
   out_5089203552383187410[43] = 0;
   out_5089203552383187410[44] = 0;
   out_5089203552383187410[45] = 0;
   out_5089203552383187410[46] = 0;
   out_5089203552383187410[47] = 0;
   out_5089203552383187410[48] = 0;
   out_5089203552383187410[49] = 0;
   out_5089203552383187410[50] = 0;
   out_5089203552383187410[51] = 0;
   out_5089203552383187410[52] = 0;
   out_5089203552383187410[53] = 0;
   out_5089203552383187410[54] = 0;
   out_5089203552383187410[55] = 0;
   out_5089203552383187410[56] = 1;
   out_5089203552383187410[57] = 0;
   out_5089203552383187410[58] = 0;
   out_5089203552383187410[59] = 1;
   out_5089203552383187410[60] = 0;
   out_5089203552383187410[61] = 0;
   out_5089203552383187410[62] = 0;
   out_5089203552383187410[63] = 0;
   out_5089203552383187410[64] = 0;
   out_5089203552383187410[65] = 0;
}
void h_9(double *state, double *unused, double *out_6633813031196510122) {
   out_6633813031196510122[0] = state[10];
   out_6633813031196510122[1] = state[11];
   out_6633813031196510122[2] = state[12];
}
void H_9(double *state, double *unused, double *out_4848013905753596765) {
   out_4848013905753596765[0] = 0;
   out_4848013905753596765[1] = 0;
   out_4848013905753596765[2] = 0;
   out_4848013905753596765[3] = 0;
   out_4848013905753596765[4] = 0;
   out_4848013905753596765[5] = 0;
   out_4848013905753596765[6] = 0;
   out_4848013905753596765[7] = 0;
   out_4848013905753596765[8] = 0;
   out_4848013905753596765[9] = 0;
   out_4848013905753596765[10] = 1;
   out_4848013905753596765[11] = 0;
   out_4848013905753596765[12] = 0;
   out_4848013905753596765[13] = 0;
   out_4848013905753596765[14] = 0;
   out_4848013905753596765[15] = 0;
   out_4848013905753596765[16] = 0;
   out_4848013905753596765[17] = 0;
   out_4848013905753596765[18] = 0;
   out_4848013905753596765[19] = 0;
   out_4848013905753596765[20] = 0;
   out_4848013905753596765[21] = 0;
   out_4848013905753596765[22] = 0;
   out_4848013905753596765[23] = 0;
   out_4848013905753596765[24] = 0;
   out_4848013905753596765[25] = 0;
   out_4848013905753596765[26] = 0;
   out_4848013905753596765[27] = 0;
   out_4848013905753596765[28] = 0;
   out_4848013905753596765[29] = 0;
   out_4848013905753596765[30] = 0;
   out_4848013905753596765[31] = 0;
   out_4848013905753596765[32] = 0;
   out_4848013905753596765[33] = 1;
   out_4848013905753596765[34] = 0;
   out_4848013905753596765[35] = 0;
   out_4848013905753596765[36] = 0;
   out_4848013905753596765[37] = 0;
   out_4848013905753596765[38] = 0;
   out_4848013905753596765[39] = 0;
   out_4848013905753596765[40] = 0;
   out_4848013905753596765[41] = 0;
   out_4848013905753596765[42] = 0;
   out_4848013905753596765[43] = 0;
   out_4848013905753596765[44] = 0;
   out_4848013905753596765[45] = 0;
   out_4848013905753596765[46] = 0;
   out_4848013905753596765[47] = 0;
   out_4848013905753596765[48] = 0;
   out_4848013905753596765[49] = 0;
   out_4848013905753596765[50] = 0;
   out_4848013905753596765[51] = 0;
   out_4848013905753596765[52] = 0;
   out_4848013905753596765[53] = 0;
   out_4848013905753596765[54] = 0;
   out_4848013905753596765[55] = 0;
   out_4848013905753596765[56] = 1;
   out_4848013905753596765[57] = 0;
   out_4848013905753596765[58] = 0;
   out_4848013905753596765[59] = 0;
   out_4848013905753596765[60] = 0;
   out_4848013905753596765[61] = 0;
   out_4848013905753596765[62] = 0;
   out_4848013905753596765[63] = 0;
   out_4848013905753596765[64] = 0;
   out_4848013905753596765[65] = 0;
}
void h_10(double *state, double *unused, double *out_6664581404598303595) {
   out_6664581404598303595[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_6664581404598303595[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_6664581404598303595[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6913007481273030652) {
   out_6913007481273030652[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6913007481273030652[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6913007481273030652[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6913007481273030652[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6913007481273030652[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6913007481273030652[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6913007481273030652[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6913007481273030652[7] = 0;
   out_6913007481273030652[8] = 0;
   out_6913007481273030652[9] = 0;
   out_6913007481273030652[10] = 0;
   out_6913007481273030652[11] = 0;
   out_6913007481273030652[12] = 0;
   out_6913007481273030652[13] = 0;
   out_6913007481273030652[14] = 0;
   out_6913007481273030652[15] = 0;
   out_6913007481273030652[16] = 1;
   out_6913007481273030652[17] = 0;
   out_6913007481273030652[18] = 0;
   out_6913007481273030652[19] = 1;
   out_6913007481273030652[20] = 0;
   out_6913007481273030652[21] = 0;
   out_6913007481273030652[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6913007481273030652[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6913007481273030652[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6913007481273030652[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6913007481273030652[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6913007481273030652[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6913007481273030652[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6913007481273030652[29] = 0;
   out_6913007481273030652[30] = 0;
   out_6913007481273030652[31] = 0;
   out_6913007481273030652[32] = 0;
   out_6913007481273030652[33] = 0;
   out_6913007481273030652[34] = 0;
   out_6913007481273030652[35] = 0;
   out_6913007481273030652[36] = 0;
   out_6913007481273030652[37] = 0;
   out_6913007481273030652[38] = 0;
   out_6913007481273030652[39] = 1;
   out_6913007481273030652[40] = 0;
   out_6913007481273030652[41] = 0;
   out_6913007481273030652[42] = 1;
   out_6913007481273030652[43] = 0;
   out_6913007481273030652[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6913007481273030652[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6913007481273030652[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6913007481273030652[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6913007481273030652[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6913007481273030652[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6913007481273030652[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6913007481273030652[51] = 0;
   out_6913007481273030652[52] = 0;
   out_6913007481273030652[53] = 0;
   out_6913007481273030652[54] = 0;
   out_6913007481273030652[55] = 0;
   out_6913007481273030652[56] = 0;
   out_6913007481273030652[57] = 0;
   out_6913007481273030652[58] = 0;
   out_6913007481273030652[59] = 0;
   out_6913007481273030652[60] = 0;
   out_6913007481273030652[61] = 0;
   out_6913007481273030652[62] = 1;
   out_6913007481273030652[63] = 0;
   out_6913007481273030652[64] = 0;
   out_6913007481273030652[65] = 1;
}
void h_12(double *state, double *unused, double *out_633841989663505737) {
   out_633841989663505737[0] = state[0];
   out_633841989663505737[1] = state[1];
   out_633841989663505737[2] = state[2];
}
void H_12(double *state, double *unused, double *out_69747144351225615) {
   out_69747144351225615[0] = 1;
   out_69747144351225615[1] = 0;
   out_69747144351225615[2] = 0;
   out_69747144351225615[3] = 0;
   out_69747144351225615[4] = 0;
   out_69747144351225615[5] = 0;
   out_69747144351225615[6] = 0;
   out_69747144351225615[7] = 0;
   out_69747144351225615[8] = 0;
   out_69747144351225615[9] = 0;
   out_69747144351225615[10] = 0;
   out_69747144351225615[11] = 0;
   out_69747144351225615[12] = 0;
   out_69747144351225615[13] = 0;
   out_69747144351225615[14] = 0;
   out_69747144351225615[15] = 0;
   out_69747144351225615[16] = 0;
   out_69747144351225615[17] = 0;
   out_69747144351225615[18] = 0;
   out_69747144351225615[19] = 0;
   out_69747144351225615[20] = 0;
   out_69747144351225615[21] = 0;
   out_69747144351225615[22] = 0;
   out_69747144351225615[23] = 1;
   out_69747144351225615[24] = 0;
   out_69747144351225615[25] = 0;
   out_69747144351225615[26] = 0;
   out_69747144351225615[27] = 0;
   out_69747144351225615[28] = 0;
   out_69747144351225615[29] = 0;
   out_69747144351225615[30] = 0;
   out_69747144351225615[31] = 0;
   out_69747144351225615[32] = 0;
   out_69747144351225615[33] = 0;
   out_69747144351225615[34] = 0;
   out_69747144351225615[35] = 0;
   out_69747144351225615[36] = 0;
   out_69747144351225615[37] = 0;
   out_69747144351225615[38] = 0;
   out_69747144351225615[39] = 0;
   out_69747144351225615[40] = 0;
   out_69747144351225615[41] = 0;
   out_69747144351225615[42] = 0;
   out_69747144351225615[43] = 0;
   out_69747144351225615[44] = 0;
   out_69747144351225615[45] = 0;
   out_69747144351225615[46] = 1;
   out_69747144351225615[47] = 0;
   out_69747144351225615[48] = 0;
   out_69747144351225615[49] = 0;
   out_69747144351225615[50] = 0;
   out_69747144351225615[51] = 0;
   out_69747144351225615[52] = 0;
   out_69747144351225615[53] = 0;
   out_69747144351225615[54] = 0;
   out_69747144351225615[55] = 0;
   out_69747144351225615[56] = 0;
   out_69747144351225615[57] = 0;
   out_69747144351225615[58] = 0;
   out_69747144351225615[59] = 0;
   out_69747144351225615[60] = 0;
   out_69747144351225615[61] = 0;
   out_69747144351225615[62] = 0;
   out_69747144351225615[63] = 0;
   out_69747144351225615[64] = 0;
   out_69747144351225615[65] = 0;
}
void h_35(double *state, double *unused, double *out_963417644154310879) {
   out_963417644154310879[0] = state[7];
   out_963417644154310879[1] = state[8];
   out_963417644154310879[2] = state[9];
}
void H_35(double *state, double *unused, double *out_1722541495010580034) {
   out_1722541495010580034[0] = 0;
   out_1722541495010580034[1] = 0;
   out_1722541495010580034[2] = 0;
   out_1722541495010580034[3] = 0;
   out_1722541495010580034[4] = 0;
   out_1722541495010580034[5] = 0;
   out_1722541495010580034[6] = 0;
   out_1722541495010580034[7] = 1;
   out_1722541495010580034[8] = 0;
   out_1722541495010580034[9] = 0;
   out_1722541495010580034[10] = 0;
   out_1722541495010580034[11] = 0;
   out_1722541495010580034[12] = 0;
   out_1722541495010580034[13] = 0;
   out_1722541495010580034[14] = 0;
   out_1722541495010580034[15] = 0;
   out_1722541495010580034[16] = 0;
   out_1722541495010580034[17] = 0;
   out_1722541495010580034[18] = 0;
   out_1722541495010580034[19] = 0;
   out_1722541495010580034[20] = 0;
   out_1722541495010580034[21] = 0;
   out_1722541495010580034[22] = 0;
   out_1722541495010580034[23] = 0;
   out_1722541495010580034[24] = 0;
   out_1722541495010580034[25] = 0;
   out_1722541495010580034[26] = 0;
   out_1722541495010580034[27] = 0;
   out_1722541495010580034[28] = 0;
   out_1722541495010580034[29] = 0;
   out_1722541495010580034[30] = 1;
   out_1722541495010580034[31] = 0;
   out_1722541495010580034[32] = 0;
   out_1722541495010580034[33] = 0;
   out_1722541495010580034[34] = 0;
   out_1722541495010580034[35] = 0;
   out_1722541495010580034[36] = 0;
   out_1722541495010580034[37] = 0;
   out_1722541495010580034[38] = 0;
   out_1722541495010580034[39] = 0;
   out_1722541495010580034[40] = 0;
   out_1722541495010580034[41] = 0;
   out_1722541495010580034[42] = 0;
   out_1722541495010580034[43] = 0;
   out_1722541495010580034[44] = 0;
   out_1722541495010580034[45] = 0;
   out_1722541495010580034[46] = 0;
   out_1722541495010580034[47] = 0;
   out_1722541495010580034[48] = 0;
   out_1722541495010580034[49] = 0;
   out_1722541495010580034[50] = 0;
   out_1722541495010580034[51] = 0;
   out_1722541495010580034[52] = 0;
   out_1722541495010580034[53] = 1;
   out_1722541495010580034[54] = 0;
   out_1722541495010580034[55] = 0;
   out_1722541495010580034[56] = 0;
   out_1722541495010580034[57] = 0;
   out_1722541495010580034[58] = 0;
   out_1722541495010580034[59] = 0;
   out_1722541495010580034[60] = 0;
   out_1722541495010580034[61] = 0;
   out_1722541495010580034[62] = 0;
   out_1722541495010580034[63] = 0;
   out_1722541495010580034[64] = 0;
   out_1722541495010580034[65] = 0;
}
void h_32(double *state, double *unused, double *out_6379816265712720048) {
   out_6379816265712720048[0] = state[3];
   out_6379816265712720048[1] = state[4];
   out_6379816265712720048[2] = state[5];
   out_6379816265712720048[3] = state[6];
}
void H_32(double *state, double *unused, double *out_4609022917859034530) {
   out_4609022917859034530[0] = 0;
   out_4609022917859034530[1] = 0;
   out_4609022917859034530[2] = 0;
   out_4609022917859034530[3] = 1;
   out_4609022917859034530[4] = 0;
   out_4609022917859034530[5] = 0;
   out_4609022917859034530[6] = 0;
   out_4609022917859034530[7] = 0;
   out_4609022917859034530[8] = 0;
   out_4609022917859034530[9] = 0;
   out_4609022917859034530[10] = 0;
   out_4609022917859034530[11] = 0;
   out_4609022917859034530[12] = 0;
   out_4609022917859034530[13] = 0;
   out_4609022917859034530[14] = 0;
   out_4609022917859034530[15] = 0;
   out_4609022917859034530[16] = 0;
   out_4609022917859034530[17] = 0;
   out_4609022917859034530[18] = 0;
   out_4609022917859034530[19] = 0;
   out_4609022917859034530[20] = 0;
   out_4609022917859034530[21] = 0;
   out_4609022917859034530[22] = 0;
   out_4609022917859034530[23] = 0;
   out_4609022917859034530[24] = 0;
   out_4609022917859034530[25] = 0;
   out_4609022917859034530[26] = 1;
   out_4609022917859034530[27] = 0;
   out_4609022917859034530[28] = 0;
   out_4609022917859034530[29] = 0;
   out_4609022917859034530[30] = 0;
   out_4609022917859034530[31] = 0;
   out_4609022917859034530[32] = 0;
   out_4609022917859034530[33] = 0;
   out_4609022917859034530[34] = 0;
   out_4609022917859034530[35] = 0;
   out_4609022917859034530[36] = 0;
   out_4609022917859034530[37] = 0;
   out_4609022917859034530[38] = 0;
   out_4609022917859034530[39] = 0;
   out_4609022917859034530[40] = 0;
   out_4609022917859034530[41] = 0;
   out_4609022917859034530[42] = 0;
   out_4609022917859034530[43] = 0;
   out_4609022917859034530[44] = 0;
   out_4609022917859034530[45] = 0;
   out_4609022917859034530[46] = 0;
   out_4609022917859034530[47] = 0;
   out_4609022917859034530[48] = 0;
   out_4609022917859034530[49] = 1;
   out_4609022917859034530[50] = 0;
   out_4609022917859034530[51] = 0;
   out_4609022917859034530[52] = 0;
   out_4609022917859034530[53] = 0;
   out_4609022917859034530[54] = 0;
   out_4609022917859034530[55] = 0;
   out_4609022917859034530[56] = 0;
   out_4609022917859034530[57] = 0;
   out_4609022917859034530[58] = 0;
   out_4609022917859034530[59] = 0;
   out_4609022917859034530[60] = 0;
   out_4609022917859034530[61] = 0;
   out_4609022917859034530[62] = 0;
   out_4609022917859034530[63] = 0;
   out_4609022917859034530[64] = 0;
   out_4609022917859034530[65] = 0;
   out_4609022917859034530[66] = 0;
   out_4609022917859034530[67] = 0;
   out_4609022917859034530[68] = 0;
   out_4609022917859034530[69] = 0;
   out_4609022917859034530[70] = 0;
   out_4609022917859034530[71] = 0;
   out_4609022917859034530[72] = 1;
   out_4609022917859034530[73] = 0;
   out_4609022917859034530[74] = 0;
   out_4609022917859034530[75] = 0;
   out_4609022917859034530[76] = 0;
   out_4609022917859034530[77] = 0;
   out_4609022917859034530[78] = 0;
   out_4609022917859034530[79] = 0;
   out_4609022917859034530[80] = 0;
   out_4609022917859034530[81] = 0;
   out_4609022917859034530[82] = 0;
   out_4609022917859034530[83] = 0;
   out_4609022917859034530[84] = 0;
   out_4609022917859034530[85] = 0;
   out_4609022917859034530[86] = 0;
   out_4609022917859034530[87] = 0;
}
void h_13(double *state, double *unused, double *out_6341279531986591003) {
   out_6341279531986591003[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_6341279531986591003[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_6341279531986591003[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_2242902093036612449) {
   out_2242902093036612449[0] = 0;
   out_2242902093036612449[1] = 0;
   out_2242902093036612449[2] = 0;
   out_2242902093036612449[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2242902093036612449[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2242902093036612449[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_2242902093036612449[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2242902093036612449[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_2242902093036612449[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_2242902093036612449[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_2242902093036612449[10] = 0;
   out_2242902093036612449[11] = 0;
   out_2242902093036612449[12] = 0;
   out_2242902093036612449[13] = 0;
   out_2242902093036612449[14] = 0;
   out_2242902093036612449[15] = 0;
   out_2242902093036612449[16] = 0;
   out_2242902093036612449[17] = 0;
   out_2242902093036612449[18] = 0;
   out_2242902093036612449[19] = 0;
   out_2242902093036612449[20] = 0;
   out_2242902093036612449[21] = 0;
   out_2242902093036612449[22] = 0;
   out_2242902093036612449[23] = 0;
   out_2242902093036612449[24] = 0;
   out_2242902093036612449[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2242902093036612449[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2242902093036612449[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2242902093036612449[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_2242902093036612449[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_2242902093036612449[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_2242902093036612449[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_2242902093036612449[32] = 0;
   out_2242902093036612449[33] = 0;
   out_2242902093036612449[34] = 0;
   out_2242902093036612449[35] = 0;
   out_2242902093036612449[36] = 0;
   out_2242902093036612449[37] = 0;
   out_2242902093036612449[38] = 0;
   out_2242902093036612449[39] = 0;
   out_2242902093036612449[40] = 0;
   out_2242902093036612449[41] = 0;
   out_2242902093036612449[42] = 0;
   out_2242902093036612449[43] = 0;
   out_2242902093036612449[44] = 0;
   out_2242902093036612449[45] = 0;
   out_2242902093036612449[46] = 0;
   out_2242902093036612449[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2242902093036612449[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_2242902093036612449[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2242902093036612449[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2242902093036612449[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_2242902093036612449[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_2242902093036612449[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_2242902093036612449[54] = 0;
   out_2242902093036612449[55] = 0;
   out_2242902093036612449[56] = 0;
   out_2242902093036612449[57] = 0;
   out_2242902093036612449[58] = 0;
   out_2242902093036612449[59] = 0;
   out_2242902093036612449[60] = 0;
   out_2242902093036612449[61] = 0;
   out_2242902093036612449[62] = 0;
   out_2242902093036612449[63] = 0;
   out_2242902093036612449[64] = 0;
   out_2242902093036612449[65] = 0;
}
void h_14(double *state, double *unused, double *out_6633813031196510122) {
   out_6633813031196510122[0] = state[10];
   out_6633813031196510122[1] = state[11];
   out_6633813031196510122[2] = state[12];
}
void H_14(double *state, double *unused, double *out_4848013905753596765) {
   out_4848013905753596765[0] = 0;
   out_4848013905753596765[1] = 0;
   out_4848013905753596765[2] = 0;
   out_4848013905753596765[3] = 0;
   out_4848013905753596765[4] = 0;
   out_4848013905753596765[5] = 0;
   out_4848013905753596765[6] = 0;
   out_4848013905753596765[7] = 0;
   out_4848013905753596765[8] = 0;
   out_4848013905753596765[9] = 0;
   out_4848013905753596765[10] = 1;
   out_4848013905753596765[11] = 0;
   out_4848013905753596765[12] = 0;
   out_4848013905753596765[13] = 0;
   out_4848013905753596765[14] = 0;
   out_4848013905753596765[15] = 0;
   out_4848013905753596765[16] = 0;
   out_4848013905753596765[17] = 0;
   out_4848013905753596765[18] = 0;
   out_4848013905753596765[19] = 0;
   out_4848013905753596765[20] = 0;
   out_4848013905753596765[21] = 0;
   out_4848013905753596765[22] = 0;
   out_4848013905753596765[23] = 0;
   out_4848013905753596765[24] = 0;
   out_4848013905753596765[25] = 0;
   out_4848013905753596765[26] = 0;
   out_4848013905753596765[27] = 0;
   out_4848013905753596765[28] = 0;
   out_4848013905753596765[29] = 0;
   out_4848013905753596765[30] = 0;
   out_4848013905753596765[31] = 0;
   out_4848013905753596765[32] = 0;
   out_4848013905753596765[33] = 1;
   out_4848013905753596765[34] = 0;
   out_4848013905753596765[35] = 0;
   out_4848013905753596765[36] = 0;
   out_4848013905753596765[37] = 0;
   out_4848013905753596765[38] = 0;
   out_4848013905753596765[39] = 0;
   out_4848013905753596765[40] = 0;
   out_4848013905753596765[41] = 0;
   out_4848013905753596765[42] = 0;
   out_4848013905753596765[43] = 0;
   out_4848013905753596765[44] = 0;
   out_4848013905753596765[45] = 0;
   out_4848013905753596765[46] = 0;
   out_4848013905753596765[47] = 0;
   out_4848013905753596765[48] = 0;
   out_4848013905753596765[49] = 0;
   out_4848013905753596765[50] = 0;
   out_4848013905753596765[51] = 0;
   out_4848013905753596765[52] = 0;
   out_4848013905753596765[53] = 0;
   out_4848013905753596765[54] = 0;
   out_4848013905753596765[55] = 0;
   out_4848013905753596765[56] = 1;
   out_4848013905753596765[57] = 0;
   out_4848013905753596765[58] = 0;
   out_4848013905753596765[59] = 0;
   out_4848013905753596765[60] = 0;
   out_4848013905753596765[61] = 0;
   out_4848013905753596765[62] = 0;
   out_4848013905753596765[63] = 0;
   out_4848013905753596765[64] = 0;
   out_4848013905753596765[65] = 0;
}
void h_33(double *state, double *unused, double *out_6554272421620977698) {
   out_6554272421620977698[0] = state[16];
   out_6554272421620977698[1] = state[17];
   out_6554272421620977698[2] = state[18];
}
void H_33(double *state, double *unused, double *out_1428015509628277570) {
   out_1428015509628277570[0] = 0;
   out_1428015509628277570[1] = 0;
   out_1428015509628277570[2] = 0;
   out_1428015509628277570[3] = 0;
   out_1428015509628277570[4] = 0;
   out_1428015509628277570[5] = 0;
   out_1428015509628277570[6] = 0;
   out_1428015509628277570[7] = 0;
   out_1428015509628277570[8] = 0;
   out_1428015509628277570[9] = 0;
   out_1428015509628277570[10] = 0;
   out_1428015509628277570[11] = 0;
   out_1428015509628277570[12] = 0;
   out_1428015509628277570[13] = 0;
   out_1428015509628277570[14] = 0;
   out_1428015509628277570[15] = 0;
   out_1428015509628277570[16] = 1;
   out_1428015509628277570[17] = 0;
   out_1428015509628277570[18] = 0;
   out_1428015509628277570[19] = 0;
   out_1428015509628277570[20] = 0;
   out_1428015509628277570[21] = 0;
   out_1428015509628277570[22] = 0;
   out_1428015509628277570[23] = 0;
   out_1428015509628277570[24] = 0;
   out_1428015509628277570[25] = 0;
   out_1428015509628277570[26] = 0;
   out_1428015509628277570[27] = 0;
   out_1428015509628277570[28] = 0;
   out_1428015509628277570[29] = 0;
   out_1428015509628277570[30] = 0;
   out_1428015509628277570[31] = 0;
   out_1428015509628277570[32] = 0;
   out_1428015509628277570[33] = 0;
   out_1428015509628277570[34] = 0;
   out_1428015509628277570[35] = 0;
   out_1428015509628277570[36] = 0;
   out_1428015509628277570[37] = 0;
   out_1428015509628277570[38] = 0;
   out_1428015509628277570[39] = 1;
   out_1428015509628277570[40] = 0;
   out_1428015509628277570[41] = 0;
   out_1428015509628277570[42] = 0;
   out_1428015509628277570[43] = 0;
   out_1428015509628277570[44] = 0;
   out_1428015509628277570[45] = 0;
   out_1428015509628277570[46] = 0;
   out_1428015509628277570[47] = 0;
   out_1428015509628277570[48] = 0;
   out_1428015509628277570[49] = 0;
   out_1428015509628277570[50] = 0;
   out_1428015509628277570[51] = 0;
   out_1428015509628277570[52] = 0;
   out_1428015509628277570[53] = 0;
   out_1428015509628277570[54] = 0;
   out_1428015509628277570[55] = 0;
   out_1428015509628277570[56] = 0;
   out_1428015509628277570[57] = 0;
   out_1428015509628277570[58] = 0;
   out_1428015509628277570[59] = 0;
   out_1428015509628277570[60] = 0;
   out_1428015509628277570[61] = 0;
   out_1428015509628277570[62] = 1;
   out_1428015509628277570[63] = 0;
   out_1428015509628277570[64] = 0;
   out_1428015509628277570[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_2228758734077453113) {
  H(in_vec, out_2228758734077453113);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_6109722366019468224) {
  err_fun(nom_x, delta_x, out_6109722366019468224);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_8198973285533712309) {
  inv_err_fun(nom_x, true_x, out_8198973285533712309);
}
void live_H_mod_fun(double *state, double *out_7958592863135401902) {
  H_mod_fun(state, out_7958592863135401902);
}
void live_f_fun(double *state, double dt, double *out_1637479678516278702) {
  f_fun(state,  dt, out_1637479678516278702);
}
void live_F_fun(double *state, double dt, double *out_2036482552630167662) {
  F_fun(state,  dt, out_2036482552630167662);
}
void live_h_4(double *state, double *unused, double *out_210442290815034510) {
  h_4(state, unused, out_210442290815034510);
}
void live_H_4(double *state, double *unused, double *out_5089203552383187410) {
  H_4(state, unused, out_5089203552383187410);
}
void live_h_9(double *state, double *unused, double *out_6633813031196510122) {
  h_9(state, unused, out_6633813031196510122);
}
void live_H_9(double *state, double *unused, double *out_4848013905753596765) {
  H_9(state, unused, out_4848013905753596765);
}
void live_h_10(double *state, double *unused, double *out_6664581404598303595) {
  h_10(state, unused, out_6664581404598303595);
}
void live_H_10(double *state, double *unused, double *out_6913007481273030652) {
  H_10(state, unused, out_6913007481273030652);
}
void live_h_12(double *state, double *unused, double *out_633841989663505737) {
  h_12(state, unused, out_633841989663505737);
}
void live_H_12(double *state, double *unused, double *out_69747144351225615) {
  H_12(state, unused, out_69747144351225615);
}
void live_h_35(double *state, double *unused, double *out_963417644154310879) {
  h_35(state, unused, out_963417644154310879);
}
void live_H_35(double *state, double *unused, double *out_1722541495010580034) {
  H_35(state, unused, out_1722541495010580034);
}
void live_h_32(double *state, double *unused, double *out_6379816265712720048) {
  h_32(state, unused, out_6379816265712720048);
}
void live_H_32(double *state, double *unused, double *out_4609022917859034530) {
  H_32(state, unused, out_4609022917859034530);
}
void live_h_13(double *state, double *unused, double *out_6341279531986591003) {
  h_13(state, unused, out_6341279531986591003);
}
void live_H_13(double *state, double *unused, double *out_2242902093036612449) {
  H_13(state, unused, out_2242902093036612449);
}
void live_h_14(double *state, double *unused, double *out_6633813031196510122) {
  h_14(state, unused, out_6633813031196510122);
}
void live_H_14(double *state, double *unused, double *out_4848013905753596765) {
  H_14(state, unused, out_4848013905753596765);
}
void live_h_33(double *state, double *unused, double *out_6554272421620977698) {
  h_33(state, unused, out_6554272421620977698);
}
void live_H_33(double *state, double *unused, double *out_1428015509628277570) {
  H_33(state, unused, out_1428015509628277570);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
